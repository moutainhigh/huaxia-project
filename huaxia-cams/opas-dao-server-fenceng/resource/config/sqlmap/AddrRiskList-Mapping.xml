<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AddrRiskList">

	<resultMap id="addrRiskListResultMap" type="com.huaxia.opas.domain.riskcheck.AddrRiskList">
		<id column="AUTO_ID" property="autoId" jdbcType="VARCHAR" />
		<result column="COMPANY_ADDR" property="companyAddr" jdbcType="VARCHAR" />
		<result column="LIVING_ADDR" property="livingAddr" jdbcType="VARCHAR" />
		<result column="BORN_ADDR" property="bornAddr" jdbcType="VARCHAR" />
		<result column="BILL_ADDR" property="billAddr" jdbcType="VARCHAR" />
		<result column="OTHER_ADDR" property="otherAddr" jdbcType="VARCHAR" />
		<result column="FRAUD_TYPE" property="fraudType" jdbcType="CHAR" />
		<result column="INFO_CHANNEL" property="infoChannel" jdbcType="CHAR" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="INVALID_TIME" property="invalidTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="USER_OPERATOR" property="userOperator"
			jdbcType="VARCHAR" />
		<result column="OPERAT_TIME" property="operatTime" jdbcType="TIMESTAMP" />
		<result column="CURR_STATUS" property="currStatus" jdbcType="CHAR" />
	</resultMap>
	<select id="selectByPrimaryKey" resultMap="addrRiskListResultMap"
		parameterType="java.lang.String">
		select
		AUTO_ID,
		COMPANY_ADDR,
		LIVING_ADDR,
		BORN_ADDR,
		BILL_ADDR,
		OTHER_ADDR,
		FRAUD_TYPE,
		INFO_CHANNEL,
		MEMO,
		INVALID_TIME,
		CREATE_TIME,
		CURR_STATUS,
		USER_OPERATOR,
		OPERAT_TIME
		from
		OPAS_ADDR_RISKLIST
		where AUTO_ID =
		#{autoId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		OPAS_ADDR_RISKLIST
		where AUTO_ID =
		#{autoId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList">
		insert into
		OPAS_ADDR_RISKLIST (AUTO_ID, COMPANY_ADDR,
		LIVING_ADDR,
		BORN_ADDR, BILL_ADDR, OTHER_ADDR,
		FRAUD_TYPE, INFO_CHANNEL, MEMO,
		INVALID_TIME, CREATE_TIME, USER_OPERATOR,
		OPERAT_TIME, CURR_STATUS)
		values (#{autoId,jdbcType=VARCHAR}, #{companyAddr,jdbcType=VARCHAR},
		#{livingAddr,jdbcType=VARCHAR},
		#{bornAddr,jdbcType=VARCHAR},
		#{billAddr,jdbcType=VARCHAR}, #{otherAddr,jdbcType=VARCHAR},
		#{fraudType,jdbcType=CHAR}, #{infoChannel,jdbcType=CHAR},
		#{memo,jdbcType=VARCHAR},
		#{invalidTime,jdbcType=TIMESTAMP},
		#{createTime,jdbcType=TIMESTAMP}, #{userOperator,jdbcType=VARCHAR},
		#{operatTime,jdbcType=TIMESTAMP}, #{currStatus,jdbcType=CHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList">
		insert into OPAS_ADDR_RISKLIST
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="autoId != null">
				AUTO_ID,
			</if>
			<if test="companyAddr != null">
				COMPANY_ADDR,
			</if>
			<if test="livingAddr != null">
				LIVING_ADDR,
			</if>
			<if test="bornAddr != null">
				BORN_ADDR,
			</if>
			<if test="billAddr != null">
				BILL_ADDR,
			</if>
			<if test="otherAddr != null">
				OTHER_ADDR,
			</if>
			<if test="fraudType != null">
				FRAUD_TYPE,
			</if>
			<if test="infoChannel != null">
				INFO_CHANNEL,
			</if>
			<if test="memo != null">
				MEMO,
			</if>
			<if test="invalidTime != null">
				INVALID_TIME,
			</if>
			CREATE_TIME,
			<if test="userOperator != null">
				USER_OPERATOR,
			</if>
			OPERAT_TIME,
			<if test="currStatus != null">
				CURR_STATUS,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="autoId != null">
				#{autoId,jdbcType=VARCHAR},
			</if>
			<if test="companyAddr != null">
				#{companyAddr,jdbcType=VARCHAR},
			</if>
			<if test="livingAddr != null">
				#{livingAddr,jdbcType=VARCHAR},
			</if>
			<if test="bornAddr != null">
				#{bornAddr,jdbcType=VARCHAR},
			</if>
			<if test="billAddr != null">
				#{billAddr,jdbcType=VARCHAR},
			</if>
			<if test="otherAddr != null">
				#{otherAddr,jdbcType=VARCHAR},
			</if>
			<if test="fraudType != null">
				#{fraudType,jdbcType=CHAR},
			</if>
			<if test="infoChannel != null">
				#{infoChannel,jdbcType=CHAR},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
			<if test="invalidTime != null">
				#{invalidTime,jdbcType=TIMESTAMP},
			</if>
			CURRENT_DATE,
			<if test="userOperator != null">
				#{userOperator,jdbcType=VARCHAR},
			</if>
			CURRENT_DATE,
			<if test="currStatus != null">
				#{currStatus,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList">
		update OPAS_ADDR_RISKLIST
		<set>
			<if test="companyAddr != null">
				COMPANY_ADDR = #{companyAddr,jdbcType=VARCHAR},
			</if>
			<if test="livingAddr != null">
				LIVING_ADDR = #{livingAddr,jdbcType=VARCHAR},
			</if>
			<if test="bornAddr != null">
				BORN_ADDR = #{bornAddr,jdbcType=VARCHAR},
			</if>
			<if test="billAddr != null">
				BILL_ADDR = #{billAddr,jdbcType=VARCHAR},
			</if>
			<if test="otherAddr != null">
				OTHER_ADDR = #{otherAddr,jdbcType=VARCHAR},
			</if>
			<if test="fraudType != null">
				FRAUD_TYPE = #{fraudType,jdbcType=CHAR},
			</if>
			<if test="infoChannel != null">
				INFO_CHANNEL = #{infoChannel,jdbcType=CHAR},
			</if>
			<if test="memo != null">
				MEMO = #{memo,jdbcType=VARCHAR},
			</if>
			<if test="invalidTime != null">
				INVALID_TIME = #{invalidTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userOperator != null">
				USER_OPERATOR = #{userOperator,jdbcType=VARCHAR},
			</if>
			OPERAT_TIME = CURRENT_DATE,
			<if test="currStatus != null">
				CURR_STATUS = #{currStatus,jdbcType=CHAR},
			</if>
		</set>
		where AUTO_ID = #{autoId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList">
		update
		OPAS_ADDR_RISKLIST
		set COMPANY_ADDR =
		#{companyAddr,jdbcType=VARCHAR},
		LIVING_ADDR =
		#{livingAddr,jdbcType=VARCHAR},
		BORN_ADDR =
		#{bornAddr,jdbcType=VARCHAR},
		BILL_ADDR = #{billAddr,jdbcType=VARCHAR},
		OTHER_ADDR = #{otherAddr,jdbcType=VARCHAR},
		FRAUD_TYPE =
		#{fraudType,jdbcType=CHAR},
		INFO_CHANNEL =
		#{infoChannel,jdbcType=CHAR},
		MEMO = #{memo,jdbcType=VARCHAR},
		INVALID_TIME = #{invalidTime,jdbcType=TIMESTAMP},
		CREATE_TIME =
		#{createTime,jdbcType=TIMESTAMP},
		USER_OPERATOR =
		#{userOperator,jdbcType=VARCHAR},
		OPERAT_TIME =
		#{operatTime,jdbcType=TIMESTAMP},
		CURR_STATUS =
		#{currStatus,jdbcType=CHAR}
		where AUTO_ID = #{autoId,jdbcType=VARCHAR}
	</update>

	<!--shihuan 2017-03-03 地址风险名单列表查询列表-->
	<select id="queryAddrRistList" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList"
		resultMap="addrRiskListResultMap">
		select
		AUTO_ID,
		COMPANY_ADDR,
		LIVING_ADDR,
		BORN_ADDR,
		BILL_ADDR,
		OTHER_ADDR,
		FRAUD_TYPE,
		INFO_CHANNEL,
		MEMO,
		INVALID_TIME,
		CREATE_TIME,
		CURR_STATUS,
		USER_OPERATOR,
		OPERAT_TIME
		from OPAS_ADDR_RISKLIST
		where
		1=1
		<if test="createTime != null and createTime !='' ">
			AND
			(CREATE_TIME
			BETWEEN
			#{createTime}
			AND
			(select
			#{createTime} + (INTERVAL '23:59:59'hour to second) from dual)
			)
		</if>
		<if test="companyAddr != null and companyAddr !='' ">
			AND (COMPANY_ADDR LIKE '%${companyAddr}%' OR LIVING_ADDR
			LIKE
			'%${companyAddr}%' OR BORN_ADDR LIKE '%${companyAddr}%' OR
			BILL_ADDR
			LIKE '%${companyAddr}%' OR OTHER_ADDR LIKE
			'%${companyAddr}%')
		</if>
		order by CREATE_TIME desc
	</select>

	<!--shihuan 2017-03-03 地址风险名单列表查询条数 -->
	<select id="queryAddrRistCount" parameterType="com.huaxia.opas.domain.riskcheck.AddrRiskList"
		resultType="java.lang.Integer">
		select count(1) from OPAS_ADDR_RISKLIST
		where
		1=1
		<if test="createTime != null and createTime !='' ">
			AND
			(CREATE_TIME
			BETWEEN
			#{createTime}
			AND
			(select
			#{createTime} + (INTERVAL '23:59:59'hour to second) from dual)
			)
		</if>
		<if test="companyAddr != null and companyAddr !='' ">
			AND (COMPANY_ADDR LIKE '%${companyAddr}%' OR LIVING_ADDR
			LIKE
			'%${companyAddr}%' OR BORN_ADDR LIKE '%${companyAddr}%' OR
			BILL_ADDR
			LIKE '%${companyAddr}%' OR OTHER_ADDR LIKE
			'%${companyAddr}%')
		</if>
	</select>
	<!--shihuan 2017-03-05 地址风险名单批量启动修改状态 1:启用 0:停用 -->
	<update id="updateStartStatus" parameterType="java.lang.String">
		update
		OPAS_ADDR_RISKLIST
		set CURR_STATUS = '1'
		where AUTO_ID =
		#{autoId,jdbcType=VARCHAR}
	</update>

	<!--shihuan 2017-03-05 地址风险名单批量停用修改状态 1:启用 0:停用 -->
	<update id="updateStopStatus" parameterType="java.lang.String">
		update
		OPAS_ADDR_RISKLIST
		set CURR_STATUS = '0'
		where AUTO_ID =
		#{autoId,jdbcType=VARCHAR}
	</update>

	<!-- 批量导入 shihuan 2017-03-18 -->
	<insert id="insertAddrUpload" parameterType="java.util.List">
		insert into OPAS_ADDR_RISKLIST(
		AUTO_ID,
		COMPANY_ADDR,
		LIVING_ADDR,
		BORN_ADDR,
		BILL_ADDR,
		OTHER_ADDR,
		FRAUD_TYPE,
		INFO_CHANNEL,
		MEMO,
		INVALID_TIME,
		CREATE_TIME,
		USER_OPERATOR,
		OPERAT_TIME,
		CURR_STATUS)
		<foreach collection="list" item="item" index="index"
			separator="union all">
			(select
			#{item.autoId,jdbcType=VARCHAR},
			#{item.companyAddr,jdbcType=VARCHAR},
			#{item.livingAddr,jdbcType=VARCHAR},
			#{item.bornAddr,jdbcType=VARCHAR},
			#{item.billAddr,jdbcType=VARCHAR},
			#{item.otherAddr,jdbcType=VARCHAR},
			#{item.fraudType,jdbcType=CHAR},
			#{item.infoChannel,jdbcType=CHAR},
			#{item.memo,jdbcType=VARCHAR},
			#{item.invalidTime,jdbcType=TIMESTAMP},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.userOperator,jdbcType=VARCHAR},
			#{item.operatTime,jdbcType=TIMESTAMP},
			#{item.currStatus,jdbcType=CHAR}
			from dual)
		</foreach>
	</insert>
</mapper>